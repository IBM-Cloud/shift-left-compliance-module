version: '2'
messages:
  $i18n: locales.yml
template:
  name: Roar Tekton Toolchain Template
  description: Toolchain template for creating the Roar Tekton testing environment
  required:
  - repo_cli_dev_plugin_test
  - CleanRoarEnv
  - DjangoToolCE
  - DjangoToolCF
  - DjangoToolK8
  - GoToolCE
  - GoToolCF
  - GoToolK8
  - JavaToolCE
  - JavaToolCF
  - JavaToolK8
  - KituraToolCE
  - KituraToolK8
  - NLUToolCE
  - NLUToolK8
  - NodeCloudantToolCE
  - NodeCloudantToolCF
  - NodeCloudantToolK8
  - NodeRedToolCE
  - NodeRedToolCF
  - NodeRedToolK8
  - NodeToolCE
  - NodeToolCF
  - NodeToolK8
  - PythonToolCE
  - PythonToolCF
  - PythonToolK8
  - SpringToolCE
  - SpringToolCF
  - SpringToolK8
  - STTToolCE
  - STTToolK8
  - TTSToolCE
  - TTSToolK8
  - VaporToolCE
  - VaporToolK8

toolchain:
  name: $env.toolchainName
services:
  repo_cli_dev_plugin_test:
    service_id: hostedgit
    parameters:
      repo_name: 'cli-dev-plugin-test'
      repo_url: 'https://github.ibm.com/arf/cli-dev-plugin-test'
      source_repo_url: 'https://github.ibm.com/arf/cli-dev-plugin-test'
      type: clone
      has_issues: false
      enable_traceability: false
      kind: pipeline
      branch: tektonroar
      private_repo: false

  CleanRoarEnv:
    service_id: pipeline
    parameters:
      name: 'CleanRoarEnv'
      label: Pipeline for cleaning up the Roar environment
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: cleanup_config.yml
        env:
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }

  DjangoToolCE:
    service_id: pipeline
    parameters:
      name: 'DjangoToolCE'
      label: Pipeline for testing deployment of the Django starter kit via Code Engine toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'django:app:DJANGO:no:noskip:{{testEnv}}:auth:create:toolCE'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t1
          APP_NAME: 'DjangoToolCE'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  DjangoToolCF:
    service_id: pipeline
    parameters:
      name: 'DjangoToolCF'
      label: Pipeline for testing deployment of the Django starter kit via Cloud Foundry toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'django:app:DJANGO:no:noskip:{{testEnv}}:auth:create:toolCF'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t2
          APP_NAME: 'DjangoToolCF'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  DjangoToolK8:
    service_id: pipeline
    parameters:
      name: 'DjangoToolK8'
      label: Pipeline for testing deployment of the Django starter kit via Helm toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'django:app:DJANGO:no:noskip:{{testEnv}}:auth:create:toolK8'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t3
          APP_NAME: 'DjangoToolK8'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
#          PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
#          PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
#          PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
#          PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
#          ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
#          DOCKER_USERNAME: >
#            $env.dockerUsername ? '{{dockerUsername}}' : ''
#          DOCKER_PASSWORD: >
#            $env.dockerPassword ? '{{dockerPassword}}' : ''

  GoToolCE:
    service_id: pipeline
    parameters:
      name: 'GoToolCE'
      label: Pipeline for testing deployment of the Go starter kit via Code Engine toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'gin:app:GO:no:noskip:{{testEnv}}:auth:create:toolCE'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t4
          APP_NAME: 'GoToolCE'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  GoToolCF:
    service_id: pipeline
    parameters:
      name: 'GoToolCF'
      label: Pipeline for testing deployment of the Go starter kit via Cloud Foundry toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'gin:app:GO:no:noskip:{{testEnv}}:auth:create:toolCF'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t5
          APP_NAME: 'GoToolCF'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  GoToolK8:
    service_id: pipeline
    parameters:
      name: 'GoToolK8'
      label: Pipeline for testing deployment of the Go starter kit via Helm toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'gin:app:GO:no:noskip:{{testEnv}}:auth:create:toolK8'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t6
          APP_NAME: 'GoToolK8'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
#          PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
#          PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
#          PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
#          PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
#          ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
#          DOCKER_USERNAME: >
#            $env.dockerUsername ? '{{dockerUsername}}' : ''
#          DOCKER_PASSWORD: >
#            $env.dockerPassword ? '{{dockerPassword}}' : ''

  JavaToolCE:
    service_id: pipeline
    parameters:
      name: 'JavaToolCE'
      label: Pipeline for testing deployment of the Java starter kit via Code Engine toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'liberty:app:JAVA:no:noskip:{{testEnv}}:auth:create:toolCE'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t7
          APP_NAME: 'JavaToolCE'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  JavaToolCF:
    service_id: pipeline
    parameters:
      name: 'JavaToolCF'
      label: Pipeline for testing deployment of the Java starter kit via Cloud Foundry toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'liberty:app:JAVA:no:noskip:{{testEnv}}:auth:create:toolCF'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t8
          APP_NAME: 'JavaToolCF'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  JavaToolK8:
    service_id: pipeline
    parameters:
      name: 'JavaToolK8'
      label: Pipeline for testing deployment of the Java starter kit via Helm toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'liberty:app:JAVA:no:noskip:{{testEnv}}:auth:create:toolK8'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t9
          APP_NAME: 'JavaToolK8'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
#          PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
#          PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
#          PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
#          PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
#          ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
#          DOCKER_USERNAME: >
#            $env.dockerUsername ? '{{dockerUsername}}' : ''
#          DOCKER_PASSWORD: >
#            $env.dockerPassword ? '{{dockerPassword}}' : ''

  NodeToolCE:
    service_id: pipeline
    parameters:
      name: 'NodeToolCE'
      label: Pipeline for testing deployment of the Node Express starter kit via Code Engine toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'express:app:NODE:no:noskip:{{testEnv}}:auth:create:toolCE'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t10
          APP_NAME: 'NodeToolCE'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  NodeToolCF:
    service_id: pipeline
    parameters:
      name: 'NodeToolCF'
      label: Pipeline for testing deployment of the Node Express starter kit via Cloud Foundry toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'express:app:NODE:no:noskip:{{testEnv}}:auth:create:toolCF'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t11
          APP_NAME: 'NodeToolCF'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  NodeToolK8:
    service_id: pipeline
    parameters:
      name: 'NodeToolK8'
      label: Pipeline for testing deployment of the Node Express starter kit via Helm toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'express:app:NODE:no:noskip:{{testEnv}}:auth:create:toolK8'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t12
          APP_NAME: 'NodeToolK8'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
#          PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
#          PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
#          PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
#          PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
#          ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
#          DOCKER_USERNAME: >
#            $env.dockerUsername ? '{{dockerUsername}}' : ''
#          DOCKER_PASSWORD: >
#            $env.dockerPassword ? '{{dockerPassword}}' : ''

  NLUToolCE:
    service_id: pipeline
    parameters:
      name: 'NLUToolCE'
      label: Pipeline for testing deployment of the Natural Language Understanding starter kit via Code Engine toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'nlu:app:NODE:no:noskip:{{testEnv}}:auth:create:toolCE'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t13
          APP_NAME: 'NLUToolCE'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  NLUToolK8:
    service_id: pipeline
    parameters:
      name: 'NLUToolK8'
      label: Pipeline for testing deployment of the Natural Language Understanding starter kit via Helm toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'nlu:app:NODE:no:noskip:{{testEnv}}:auth:create:toolK8'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t15
          APP_NAME: 'NLUToolK8'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
#          PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
#          PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
#          PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
#          PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
#          ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
#          DOCKER_USERNAME: >
#            $env.dockerUsername ? '{{dockerUsername}}' : ''
#          DOCKER_PASSWORD: >
#            $env.dockerPassword ? '{{dockerPassword}}' : ''

  STTToolCE:
    service_id: pipeline
    parameters:
      name: 'STTToolCE'
      label: Pipeline for testing deployment of the Speech To Text starter kit via Code Engine toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'stt:app:NODE:no:noskip:{{testEnv}}:auth:create:toolCE'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t16
          APP_NAME: 'STTToolCE'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  STTToolK8:
    service_id: pipeline
    parameters:
      name: 'STTToolK8'
      label: Pipeline for testing deployment of the Speech To Text starter kit via Helm toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'stt:app:NODE:no:noskip:{{testEnv}}:auth:create:toolK8'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t18
          APP_NAME: 'STTToolK8'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
#          PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
#          PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
#          PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
#          PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
#          ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
#          DOCKER_USERNAME: >
#            $env.dockerUsername ? '{{dockerUsername}}' : ''
#          DOCKER_PASSWORD: >
#            $env.dockerPassword ? '{{dockerPassword}}' : ''

  TTSToolCE:
    service_id: pipeline
    parameters:
      name: 'TTSToolCE'
      label: Pipeline for testing deployment of the Text To Speech starter kit via Code Engine toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'tts:app:NODE:no:noskip:{{testEnv}}:auth:create:toolCE'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t19
          APP_NAME: 'TTSToolCE'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  TTSToolK8:
    service_id: pipeline
    parameters:
      name: 'TTSToolK8'
      label: Pipeline for testing deployment of the Text To Speech starter kit via Helm toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'tts:app:NODE:no:noskip:{{testEnv}}:auth:create:toolK8'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t21
          APP_NAME: 'TTSToolK8'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
#          PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
#          PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
#          PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
#          PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
#          ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
#          DOCKER_USERNAME: >
#            $env.dockerUsername ? '{{dockerUsername}}' : ''
#          DOCKER_PASSWORD: >
#            $env.dockerPassword ? '{{dockerPassword}}' : ''

  PythonToolCE:
    service_id: pipeline
    parameters:
      name: 'PythonToolCE'
      label: Pipeline for testing deployment of the Python Flask starter kit via Code Engine toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'flask:app:PYTHON:no:noskip:{{testEnv}}:auth:create:toolCE'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t22
          APP_NAME: 'PythonToolCE'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  PythonToolCF:
    service_id: pipeline
    parameters:
      name: 'PythonToolCF'
      label: Pipeline for testing deployment of the Python Flask starter kit via Cloud Foundry toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'flask:app:PYTHON:no:noskip:{{testEnv}}:auth:create:toolCF'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t23
          APP_NAME: 'PythonToolCF'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  PythonToolK8:
    service_id: pipeline
    parameters:
      name: 'PythonToolK8'
      label: Pipeline for testing deployment of the Python Flask starter kit via Helm toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'flask:app:PYTHON:no:noskip:{{testEnv}}:auth:create:toolK8'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t24
          APP_NAME: 'PythonToolK8'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
#          PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
#          PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
#          PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
#          PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
#          ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
#          DOCKER_USERNAME: >
#            $env.dockerUsername ? '{{dockerUsername}}' : ''
#          DOCKER_PASSWORD: >
#            $env.dockerPassword ? '{{dockerPassword}}' : ''

  NodeCloudantToolCE:
    service_id: pipeline
    parameters:
      name: 'NodeCloudantToolCE'
      label: Pipeline for testing deployment of the Node.js+Cloudant starter kit via Code Engine toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'nodecloudant:app:NODE:no:noskip:{{testEnv}}:auth:create:toolCE'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t25
          APP_NAME: 'NodeCloudantToolCE'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  NodeCloudantToolCF:
    service_id: pipeline
    parameters:
      name: 'NodeCloudantToolCF'
      label: Pipeline for testing deployment of the Node.js+Cloudant starter kit via Cloud Foundry toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'nodecloudant:app:NODE:no:noskip:{{testEnv}}:auth:create:toolCF'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t26
          APP_NAME: 'NodeCloudantToolCF'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  NodeCloudantToolK8:
    service_id: pipeline
    parameters:
      name: 'NodeCloudantToolK8'
      label: Pipeline for testing deployment of the Node.js+Cloudant starter kit via Helm toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'nodecloudant:app:NODE:no:noskip:{{testEnv}}:auth:create:toolK8'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t27
          APP_NAME: 'NodeCloudantToolK8'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
#          PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
#          PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
#          PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
#          PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
#          ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
#          DOCKER_USERNAME: >
#            $env.dockerUsername ? '{{dockerUsername}}' : ''
#          DOCKER_PASSWORD: >
#            $env.dockerPassword ? '{{dockerPassword}}' : ''

  NodeRedToolCE:
    service_id: pipeline
    parameters:
      name: 'NodeRedToolCE'
      label: Pipeline for testing deployment of the NodeRED starter kit via Code Engine toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'nodered:app:NODE:no:noskip:{{testEnv}}:auth:create:toolCE'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t28
          APP_NAME: 'NodeRedToolCE'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  NodeRedToolCF:
    service_id: pipeline
    parameters:
      name: 'NodeRedToolCF'
      label: Pipeline for testing deployment of the NodeRED starter kit via Cloud Foundry toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'nodered:app:NODE:no:noskip:{{testEnv}}:auth:create:toolCF'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t29
          APP_NAME: 'NodeRedToolCF'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  NodeRedToolK8:
    service_id: pipeline
    parameters:
      name: 'NodeRedToolK8'
      label: Pipeline for testing deployment of the NodeRED starter kit via Helm toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'nodered:app:NODE:no:noskip:{{testEnv}}:auth:create:toolK8'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t30
          APP_NAME: 'NodeRedToolK8'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
#          PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
#          PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
#          PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
#          PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
#          ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
#          DOCKER_USERNAME: >
#            $env.dockerUsername ? '{{dockerUsername}}' : ''
#          DOCKER_PASSWORD: >
#            $env.dockerPassword ? '{{dockerPassword}}' : ''

  SpringToolCE:
    service_id: pipeline
    parameters:
      name: 'SpringToolCE'
      label: Pipeline for testing deployment of the Spring starter kit via Code Engine toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'spring:app:SPRING:no:noskip:{{testEnv}}:auth:create:toolCE'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t31
          APP_NAME: 'SpringToolCE'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  SpringToolCF:
    service_id: pipeline
    parameters:
      name: 'SpringToolCF'
      label: Pipeline for testing deployment of the Spring starter kit via Cloud Foundry toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'spring:app:SPRING:no:noskip:{{testEnv}}:auth:create:toolCF'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t32
          APP_NAME: 'SpringToolCF'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  SpringToolK8:
    service_id: pipeline
    parameters:
      name: 'SpringToolK8'
      label: Pipeline for testing deployment of the Spring starter kit via Helm toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'spring:app:SPRING:no:noskip:{{testEnv}}:auth:create:toolK8'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t33
          APP_NAME: 'SpringToolK8'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
#          PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
#          PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
#          PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
#          PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
#          ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
#          DOCKER_USERNAME: >
#            $env.dockerUsername ? '{{dockerUsername}}' : ''
#          DOCKER_PASSWORD: >
#            $env.dockerPassword ? '{{dockerPassword}}' : ''

  KituraToolCE:
    service_id: pipeline
    parameters:
      name: 'KituraToolCE'
      label: Pipeline for testing deployment of the Swift Kitura starter kit via Code Engine toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'kitura:app:SWIFT:no:noskip:{{testEnv}}:auth:create:toolCE'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t34
          APP_NAME: 'KituraToolCE'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  KituraToolK8:
    service_id: pipeline
    parameters:
      name: 'KituraToolK8'
      label: Pipeline for testing deployment of the Swift Kitura starter kit via Helm toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'kitura:app:SWIFT:no:noskip:{{testEnv}}:auth:create:toolK8'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t35
          APP_NAME: 'KituraToolK8'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
#          PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
#          PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
#          PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
#          PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
#          ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
#          DOCKER_USERNAME: >
#            $env.dockerUsername ? '{{dockerUsername}}' : ''
#          DOCKER_PASSWORD: >
#            $env.dockerPassword ? '{{dockerPassword}}' : ''

  VaporToolCE:
    service_id: pipeline
    parameters:
      name: 'VaporToolCE'
      label: Pipeline for testing deployment of the Swift Vapor starter kit via Code Engine toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'vapor:app:SWIFT:no:noskip:{{testEnv}}:auth:create:toolCE'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t36
          APP_NAME: 'VaporToolCE'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
          #PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
          #PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
          #PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
          #PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
          #ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
          #  DOCKER_USERNAME: >
          #    $env.dockerUsername ? '{{dockerUsername}}' : ''
          #  DOCKER_PASSWORD: >
          #    $env.dockerPassword ? '{{dockerPassword}}' : ''

  VaporToolK8:
    service_id: pipeline
    parameters:
      name: 'VaporToolK8'
      label: Pipeline for testing deployment of the Swift Vapor starter kit via Helm toolchain
      services:
        - repo_cli_dev_plugin_test
      type: tekton
      ui-pipeline: true
      execute: manual-run
      configuration:
        content:
          $text: tekton_config.yml
        env:
          TEST_NAME: 'vapor:app:SWIFT:no:noskip:{{testEnv}}:auth:create:toolK8'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          API_URL: 'https://cloud.ibm.com'
          APPNAME_PREFIX: t37
          APP_NAME: 'VaporToolK8'
          ART_API_KEY: '{{form.pipeline.parameters.art-api-key}}'
          CLUSTER_NAME: roar-test
          CR_NAMESPACE: roar-test
          GIT_REPO: repo_cli_dev_plugin_test
          GIT_URL: '{{services.repo_cli_dev_plugin_test.parameters.source_repo_url}}'
          GITLAB_TOKEN: '{{form.pipeline.parameters.gitlab-token}}'
          GITLAB_USER: arftt
          LOGS_DIR: '/workspace/ROAR'
          ORG: 'devex-force'
          PASSPHRASE: 'None'
          PERSONAL_YAAS: 'None'
          PIPELINE_DOCKERCONFIGJSON: '{{form.pipeline.parameters.dockerconfigjson}}'
          REGION: 'us-south'
          REPO_COMMIT_EVENT_LISTENER_NAME: 'listener'
          REPOSITORY: repo_cli_dev_plugin_test
          RESOURCE_GROUP: 'devex-falcon'
          REVISION: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          SLACK_URL: '{{form.pipeline.parameters.slack-webhook}}'
          SPACE: 'roar'
          TEST_DIR: '/workspace/testFiles'
#          PAGERDUTY_API_URL: 'https://api.pagerduty.com/'
#          PAGERDUTY_EVENTS_API_URL: 'https://events.pagerduty.com/v2/enqueue'
#          PAGERDUTY_API_TOKEN: '{{form.pipeline.parameters.pagerduty-api-token}}'
#          PAGERDUTY_SVC_NAME: '{{form.pipeline.parameters.pagerduty-service-name}}'
#          ENABLE_PD_ALERTS: '{{form.pipeline.parameters.enable-pd-alerts}}'
          PIPELINE_REPO: repo_cli_dev_plugin_test
          PIPELINE_REPO_BRANCH: '{{services.repo_cli_dev_plugin_test.parameters.branch}}'
          GIT_COMMIT_EVENT_LISTENER_NAME: >
            if ( $env.source_provider === 'githubconsolidated' ) {
              'github-commit';
            } else if ( $env.source_provider === 'gitlab' ) {
              'grit-or-gitlab-commit';
            } else if ( $env.source_provider === 'bitbucketgit' ) {
              'bitbucket-commit';
            } else if ( $env.source_provider === 'github_integrated' ) {
              'github-ent-commit';
            } else {
              'grit-or-gitlab-commit';
            }
#          DOCKER_USERNAME: >
#            $env.dockerUsername ? '{{dockerUsername}}' : ''
#          DOCKER_PASSWORD: >
#            $env.dockerPassword ? '{{dockerPassword}}' : ''

  sm-vault:
    service_id: secretsmanager
    parameters:
      name: >
        $env.smName ? '{{smName}}' : 'sm-compliance-secrets'
      region: >
        $env.smRegion ? '{{smRegion}}' : ''
      resource-group: >
        $env.smResourceGroup ? '{{smResourceGroup}}' : ''
      instance-name: >
        $env.smInstanceName ? '{{smInstanceName}}' : ''

#  slack-roar-testing:
#    service_id: slack
#    parameters:
#      api_token: '{{form.pipeline.parameters.devx-slack-channel-webhook}}'
#      channel_name: >
#        if ( {{testEnv}} === 'prod' ) {
#          'devx-cli-tests-prod'
#        } else {
#          'devx-cli-tests-ondeck'
#        }
#      team_url: 'ibm-cloudplatform'
#      pipeline_start: false
#      pipeline_success: false
#      pipeline_fail: true

#  devops-insights:
#      service_id: draservicebroker

form:
  pipeline:
    parameters:
      api-key: '{{apiKey}}'
      art-api-key: '{{artApiKey}}'
      dockerconfigjson: '{{dockerconfigjson}}'
      gitlab-token: '{{gitLabToken}}'
      git-template-repo: '{{repository}}'
      git-template-branch: '{{branch}}'
      slack-webhook: '{{slackWebhook}}'
#      pagerduty-api-token: '{{pagerDutyAPIToken}}'
#      pagerduty-service-name: '{{pagerDutySvcName}}'
#      enable-pd-alerts: "$env.enablePDAlerts === 'true'"
    schema:
      $ref: deploy.json
